AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM template for AWS IOT project
Parameters:
  ProjectName:
    Description: Name of the project, so I can see what these things are
    Type: String
    Default: one-click
  Environment:
    Type: String
    Description: Environment being deployed
  LoggingLevel:
    Type: String
    Description: Set the logging level for lambda logging
    Default: INFO
Globals:
  Function:
    Timeout: 10
    MemorySize: 1024
    CodeUri: .
    Environment:
      Variables:
        CLICK_TABLE:
          Ref: DataTable
        LOGGING_LEVEL:
          Ref: LoggingLevel
        SECRET_PARAM:
          Fn::Sub: /Connect/${Environment}/Hubitat
Resources:
  DataTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName:
        Fn::Sub: ${ProjectName}-data-table
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: start
        AttributeType: S
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: GSI1
        KeySchema:
        - AttributeName: sk
          KeyType: HASH
        - AttributeName: pk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
      - IndexName: startIndex
        KeySchema:
        - AttributeName: start
          KeyType: HASH
        - AttributeName: pk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
  HubitatParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name:
        Fn::Sub: /Connect/${Environment}/Hubitat
      Type: String
      Value: non-Secure-string
      Description: SSM Parameter for call to IOT Manager.
      Tags:
        Project:
          Ref: ProjectName
        Environment:
          Ref: Environment
  HandleClick:
    Type: AWS::Serverless::Function
    Properties:
      Handler: lambda_clicker.handler
      Runtime: python3.8
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DataTable
      - Statement:
        - Effect: Allow
          Action:
          - dynamodb:Query
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:DeleteItem
          Resource:
          - Fn::GetAtt:
            - DataTable
            - Arn
          - Fn::Join:
            - /
            - - Fn::GetAtt:
                - DataTable
                - Arn
              - index
              - startIndex
        - Sid: SSMDescribeParametersPolicy
          Effect: Allow
          Action:
          - ssm:DescribeParameters
          Resource: '*'
        - Effect: Allow
          Action:
          - ssm:GetParameter
          - ssm:PutParameter
          Resource:
          - Fn::Join:
            - ''
            - - 'arn:aws:ssm:'
              - Ref: AWS::Region
              - ':'
              - Ref: AWS::AccountId
              - :parameter
              - Ref: HubitatParameter
        - Effect: Allow
          Action:
          - kms:CreateAlias
          - kms:Decrypt
          - kms:Encrypt
          - kms:UpdateAlias
          Resource:
          - Fn::Join:
            - ':'
            - - arn:aws:kms
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - key/*
          - Fn::Join:
            - ':'
            - - arn:aws:kms
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - alias/*
      CodeUri: s3://serverless-deploy-all-lsft-projects/cf12e3a269bcb82060c718f92fce18ae
Outputs:
  TableName:
    Description: The name of the table holding click data
    Value:
      Ref: DataTable
  IotLambda:
    Description: The name of the lambda to hook up to the Iot project
    Value:
      Ref: HandleClick
